image: golang:1.13

variables:
  DOCKER_NAME: postgresai/joe

cache:
  paths:
    - /apt-cache
    - /go/pkg/mod/cache

stages:
  - test
  - build-binary
  - build-image

test:
  before_script:
    - go mod download
  stage: test
  script:
    - make vet
    - make test

build-binary:
  stage: build-binary
  only:
    refs:
      - 18-dockerize-joe #TODO(akartasov): Change to "master" before merge.
      - tags
  artifacts:
    paths:
      - bin
  script:
    - make build

build-image:
  only:
    refs:
      - 18-dockerize-joe #TODO(akartasov): Change to "master" before merge.
      - tags
  image: alpine:3.11
  stage: build-image
  variables:
    LATEST: latest
    CURRENT: todo
  artifacts:
    paths:
      - bin
  services:
    - docker:dind
  script:
    - set -x #TODO(akartasov): Remove before merge.

    - TAGS_BUILD=""
    - TAGS_PUSH=""
    - >
      if [[ ! -z "${CI_COMMIT_TAG}" ]]; then
        TAG_LATEST="${DOCKER_NAME}:latest"
        TAGS_BUILD="${TAGS_BUILD} --tag ${TAG_LATEST}"
        TAGS_PUSH="${TAGS_PUSH}${TAG_LATEST}\n"

        TAG_VERSION="${DOCKER_NAME}:${CI_COMMIT_TAG}"
        TAGS_BUILD="${TAGS_BUILD} --tag ${TAG_VERSION}"
        TAGS_PUSH="${TAGS_PUSH}${TAG_VERSION}\n"
      else
        TAG_ALPHA_LATEST="${DOCKER_NAME}:alpha"
        TAGS_BUILD="${TAGS_BUILD} --tag ${TAG_ALPHA_LATEST}"
        TAGS_PUSH="${TAGS_PUSH}${TAG_ALPHA_LATEST}\n"

        TAG_ALPHA_VERSION="${DOCKER_NAME}:alpha-${CI_COMMIT_SHORT_SHA}"
        TAGS_BUILD="${TAGS_BUILD} --tag $TAG_ALPHA_VERSION"
        TAGS_PUSH="${TAGS_PUSH}$TAG_ALPHA_VERSION\n"
      fi

    - docker login --username $DH_CI_REGISTRY_USER --password "$DH_CI_REGISTRY_PASSWORD" $DH_CI_REGISTRY
    - docker build $TAGS_BUILD .

    - >
      echo -e "$TAGS_PUSH" | while read -r tag; do
        [ -z "$tag" ] && continue

        docker push "${tag}"
      done
